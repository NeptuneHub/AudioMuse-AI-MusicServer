apiVersion: v1
kind: Namespace
metadata:
  name: audiomuse-all-in-one

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: audiomuse-ai-config-pvc
  namespace: audiomuse-all-in-one
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: audiomuse-all-in-one-deployment
  namespace: audiomuse-all-in-one
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audiomuse-all-in-one
  template:
    metadata:
      labels:
        app: audiomuse-all-in-one
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: audiomuse-all-in-one
        image: 192.168.3.99:5000/audiomuse-ai-server:local
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        - containerPort: 8080
        - containerPort: 8000
        volumeMounts:
        - name: config-storage
          mountPath: /config
        - name: media-usb
          mountPath: /media-usb
        - name: nfs1
          mountPath: /media-NFS1
        - name: nfs2
          mountPath: /media-NFS2
      volumes:
      - name: config-storage
        persistentVolumeClaim:
          claimName: audiomuse-ai-config-pvc
      - name: media-usb
        persistentVolumeClaim:
          claimName: servarr-pvc-usb
      - name: nfs1
        persistentVolumeClaim:
          claimName: nfs1-pvc
      - name: nfs2
        persistentVolumeClaim:
          claimName: nfs2-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: audiomuse-all-in-one-service
  namespace: audiomuse-all-in-one
spec:
  selector:
    app: audiomuse-all-in-one
  type: LoadBalancer
  loadBalancerIP: 192.168.3.77
  ports:
    - name: react-frontend
      protocol: TCP
      port: 3000
      targetPort: 3000
    - name: go-backend
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: python-core
      protocol: TCP
      port: 8000
      targetPort: 8000

